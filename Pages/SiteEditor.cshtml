@page
@model iTech.Pages.SiteEditorModel
@{
    ViewData["Title"] = "Site Editor";
    Layout = "/Areas/Admin/Pages/Shared/_LayoutEditor.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" rel="stylesheet">
<link href="~/css/grapes.min.css" rel="stylesheet" />
<link href="~/css/grapesjs-preset-webpage.min.css" rel="stylesheet" />
<link href="~/css/grapick.min.css" rel="stylesheet" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

<!--Grapes JS-->
<script src="~/js/grapes.min.js"></script>
<script src="~/js/grapesjs-blocks-basic.js"></script>
<script src="~/js/grapesjs-plugin-forms.js"></script>
<script src="~/js/ckeditor/ckeditor.js"></script>
<script src="~/js/grapesjs-plugin-ckeditor.min.js"></script>
<link href="~/css/editor.css" rel="stylesheet" />

<div class="app-wrapper  flex-column flex-row-fluid " id="kt_app_wrapper">
    <div class="app-main flex-column flex-row-fluid" id="kt_app_main">
        <div class="d-flex flex-column flex-column-fluid">
            <div id="kt_app_toolbar" class="app-toolbar  py-3 py-lg-6 " style="background-color:#151521">
                <div id="kt_app_toolbar_container" class="app-container  container-fluid d-flex flex-stack ">
                    <div data-kt-swapper="true" data-kt-swapper-mode="{default: 'prepend', lg: 'prepend'}" data-kt-swapper-parent="{default: '#kt_app_content_container', lg: '#kt_app_toolbar_container'}" class="page-title d-flex flex-column justify-content-center flex-wrap me-3 mb-5 mb-lg-0">
                        <h1 class="page-heading d-flex fw-bold fs-3 flex-column justify-content-center my-0" style="color: white;">
                            @Model.SiteName
                        </h1>

                    </div>

                    <div class="d-flex align-items-center gap-2">
                        <div class="d-flex align-items-center">
                            <span class="fs-7 fw-bold text-gray-700 pe-4 text-nowrap d-none d-md-block">@sharedResource["Page:"]</span>
                            <select onchange="getPage(this.value)" id="PagesDrowpDown" class="form-select form-select-sm form-select-solid w-100px w-xxl-125px" data-control="select2" data-placeholder="No Page" data-hide-search="true">
                            </select>
                            <div data-bs-toggle="tooltip" data-bs-placement="top" data-bs-trigger="hover" title="@sharedResource["Add Page"]">
                                <a class="btn btn-sm btn-icon  btn-active-icon-primary">
                                    <i onclick="AddPage()" class="ki-duotone ki-plus-square fs-2hx"><span class="path1"></span><span class="path2"></span><span class="path3"></span></i>
                                </a>
                            </div>

                        </div>
                        <div class="bullet bg-secondary h-35px w-1px mx-5"></div>
                        <div class="d-flex align-items-center flex-shrink-0">
                            <div class="flex-shrink-0 ">
                                <ul class="nav" role="tablist">
                                    <li class="nav-item" role="presentation">
                                        <a id="btnDeviceMobile" class="nav-link btn btn-icon btn-color-muted btn-active-color-primary btn-active-light fw-semibold fs-7 px-4 me-1 active" data-bs-toggle="tab" href="#" aria-selected="true" role="tab">
                                            <i class="ki-duotone ki-phone fs-2qx"><span class="path1"></span><span class="path2"></span></i>
                                        </a>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <a id="btnDeviceTablet" class="nav-link btn btn-icon  btn-color-muted btn-active-color-primary btn-active-light fw-semibold fs-7 px-4 me-1 " data-bs-toggle="tab" href="#" aria-selected="true" role="tab">
                                            <i class="ki-duotone ki-tablet  fs-2qx">
                                                <i class="path1"></i>
                                                <i class="path2"></i>
                                                <i class="path3"></i>
                                            </i>
                                        </a>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <a id="btnDeviceDesktop" class="nav-link btn btn-icon  btn-color-muted btn-active-color-primary btn-active-light fw-semibold fs-7 px-4 me-1 " data-bs-toggle="tab" href="#" aria-selected="true" role="tab">
                                            <i class="ki-duotone ki-screen  fs-2qx">
                                                <i class="path1"></i>
                                                <i class="path2"></i>
                                                <i class="path3"></i>
                                                <i class="path4"></i>
                                            </i>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="d-flex align-items-center gap-2">
                            <div class="bullet bg-secondary h-35px w-1px mx-5"></div>
                            <span class="fs-7 text-gray-700 fw-bold">@sharedResource["Zoom:"]</span>
                            <div class="d-flex align-items-center ps-4">
                                <div id="kt_app_toolbar_slider" class="noUi-target noUi-target-primary w-75px w-xxl-150px noUi-sm"></div>

                                <span id="kt_app_toolbar_slider_value" class="d-flex flex-center bg-light-primary rounded-circle w-35px h-35px ms-4 fs-7 fw-bold text-primary" data-bs-toggle="tooltip" data-bs-placement="top" title="Set Zoom level">
                                </span>
                            </div>
                            <div class="bullet bg-secondary h-35px w-1px mx-5"></div>
                        </div>
                        <div class="d-flex align-items-center">
                            @* <span class="fs-7 text-gray-700 fw-bold pe-3 d-none d-md-block">@sharedResource["Quick Tools:"]</span> *@
                            <div class="d-flex gap-2">
                               @*  <a id="Visibility" class="btn btn-sm btn-icon btn-icon-muted btn-active-icon-primary" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="@sharedResource["View Components"]">
                                    <i class="ki-duotone ki-abstract-9   fs-2qx">
                                        <i class="path1"></i>
                                        <i class="path2"></i>
                                    </i>
                                </a>
                                <a id="preview" class="btn btn-sm btn-icon btn-icon-muted btn-active-icon-primary" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="@sharedResource["Preview"]">
                                    <i class="ki-duotone ki-eye  fs-2qx">
                                        <i class="path1"></i>
                                        <i class="path2"></i>
                                        <i class="path3"></i>
                                    </i>
                                </a>
                                <a id="fullScreen" class="btn btn-sm btn-icon btn-icon-muted btn-active-icon-primary" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="@sharedResource["Full Screen"]">
                                    <i class="ki-duotone ki-maximize fs-2qx">
                                        <i class="path1"></i>
                                        <i class="path2"></i>
                                        <i class="path3"></i>
                                        <i class="path4"></i>
                                        <i class="path5"></i>
                                    </i>
                                </a>
                                <a id="undo" class="btn btn-sm btn-icon btn-icon-muted btn-active-icon-primary" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="@sharedResource["Undo"]">
                                    <i class="ki-duotone ki-double-left-arrow  fs-2qx">
                                        <i class="path1"></i>
                                        <i class="path2"></i>
                                    </i>
                                </a>
                                <a id="redo" class="btn btn-sm btn-icon btn-icon-muted btn-active-icon-primary" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="@sharedResource["Redo"]">
                                    <i class="ki-duotone ki-double-right-arrow  fs-2qx">
                                        <i class="path1"></i>
                                        <i class="path2"></i>
                                    </i>
                                </a>
                                <a id="Clear" class="btn btn-sm btn-icon btn-icon-muted btn-active-icon-primary" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="@sharedResource["Clear"]">
                                    <i class="ki-duotone ki-trash-square fs-2qx">
                                        <i class="path1"></i>
                                        <i class="path2"></i>
                                        <i class="path3"></i>
                                        <i class="path4"></i>
                                    </i>
                                </a>
                                *@ <a onclick="SavePage()" class="btn btn-sm fw-bold btn-secondary" data-bs-toggle="modal" data-bs-target="#kt_modal_create_app">
                                    @sharedResource["Save"]
                                </a>
                                <a onclick="RedirectToSitePublish()" class="btn btn-sm fw-bold btn-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_createNew_app">
                                    @sharedResource["Publish"]
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="kt_app_content" class="app-content  flex-column-fluid ">
                <div id="gjs" style="height:100% !important;width:100%;direction:ltr !important" dir="ltr">
                    <h1>Hello World Component!</h1>
                </div>
                
            </div>
        </div>
    </div>
    <input value="@Model.SiteName" id="SiteNId" hidden />
    <input value="@Model.url" id="UrlId" hidden />

    <style>
        /*  .app-footer
                {
                    height:40px !important;
                } */

    </style>
    <script>
        
        const editor = grapesjs.init({
            // Indicate where to init the editor. You can also pass an HTMLElement
            container: '#gjs',
            // Get the content for the canvas directly from the element
            // As an alternative we could use: `components: '<h1>Hello World Component!</h1>'`,
            fromElement: true,
            // Size of the editor
            // height: '300px',
            width: 'auto',
           
            deviceManager: {
                devices: [{
                    id: 'desktop',
                    name: 'Desktop',
                    width: ''
                },
                {
                    id: 'tablet',
                    name: 'Tablet',
                    width: '768px',
                    widthMedia: '768px'
                },
                {
                    id: 'mobile',
                    name: 'Mobile',
                    width: '320px',
                    widthMedia: '480px'
                },

                ],
                defaultDevice: 'desktop'
            },
           
            plugins: [
                'gjs-blocks-basic',
                'grapesjs-plugin-forms',
                'grapesjs-preset-webpage',
                'grapesjs-tabs',
                'grapesjs-components-farmer',
                'gjs-plugin-ckeditor',
                'gjs-preset-newsletter',
                'customPlugin',
                'gjs-navbar',
                'grapesjs-tabs',
                'grapesjs-tooltip',
                'grapesjs-custom-code',
                'grapesjs-touch',
                'grapesjs-indexeddb',
                'grapesjs-firestore',
                'grapesjs-parser-postcss',
                'grapesjs-typed',

            ],
            pluginsOpts: {
                'gjs-plugin-ckeditor':
                {
                    position: 'left',
                    options: {
                        language: "en,ar",
                        //extraPlugins: "sourcedialog,justify,showblocks,colorbutton",
                        removeButtons: "",
                        format_tags: "p;h1;h2;h3;h4;h5;h6;pre",
                        startupFocus: true,
                        //extraAllowedContent: '*(*);*{*}', // Allows any class and any inline style
                        allowedContent: true, // Disable auto-formatting, class removing, etc.
                        //enterMode: CKEDITOR.ENTER_BR,
                        uiColor: '#CCEAEE', // Inline editor color
                        extraPlugins: 'sourcedialog,justify,showblocks,colorbutton,basicstyles,justify,dialogui,dialog,a11yhelp,dialogadvtab,basicstyles,bidi,blockquote,notification,button,toolbar,clipboard,panelbutton,panel,floatpanel,colorbutton,colordialog,templates,menu,contextmenu,copyformatting,div,resize,elementspath,enterkey,entities,popup,filetools,filebrowser,find,fakeobjects,flash,floatingspace,listblock,richcombo,font,forms,format,horizontalrule,htmlwriter,iframe,wysiwygarea,image,indent,indentblock,indentlist,smiley,justify,menubutton,language,link,list,liststyle,magicline,maximize,newpage,pagebreak,pastetext,pastefromword,preview,print,removeformat,save,selectall,showblocks,showborders,sourcearea,specialchar,scayt,stylescombo,tab,table,tabletools,tableselection,undo,lineutils,widgetselection,widget,notificationaggregator,uploadwidget,uploadimage,wsc',
                        //extraPlugins: 'dialogui,dialog,a11yhelp,dialogadvtab,basicstyles,bidi,blockquote,notification,button,toolbar,clipboard,panelbutton,panel,floatpanel,colorbutton,colordialog,templates,menu,contextmenu,copyformatting,div,resize,elementspath,enterkey,entities,exportpdf,popup,filetools,filebrowser,find,fakeobjects,flash,floatingspace,listblock,richcombo,font,forms,format,horizontalrule,htmlwriter,iframe,wysiwygarea,image,indent,indentblock,indentlist,smiley,justify,menubutton,language,link,list,liststyle,magicline,maximize,newpage,pagebreak,pastetext,pastetools,pastefromgdocs,pastefromword,preview,print,removeformat,save,selectall,showblocks,showborders,sourcearea,specialchar,scayt,stylescombo,tab,table,tabletools,tableselection,undo,lineutils,widgetselection,widget,notificationaggregator,uploadwidget,uploadimage,wsc',
                        toolbar:
                            [
                                ["Styles", "Font", "FontSize", "Format", "-", "Bold", "Italic", "Strike", "Underline", "Subscript", "Superscript", "RemoveFormat", "-", "NumberedList", "BulletedList", "-", "Outdent", "Indent", "-", "JustifyLeft", "JustifyCenter", "JustifyRight", "JustifyBlock", "-", "Link", "Unlink", "Anchor", "TextColor", "BGColor", "-", "ShowBlocks", "-", "Image", "Table", "-"]
                            ]

                    }
                }
            },
            canvas:
            {
                styles:
                    [
                        "/External/css/bootstrap.css",
                        "/External/style.css",
                        '/External/css/dark.css',
                        '/External/css/font-icons.css',
                        '/External/css/animate.css',
                        '/External/css/magnific-popup.css',
                        '/External/css/custom.css',
                        '/css/grapes.min.css',
                        'https://use.fontawesome.com/releases/v5.8.2/css/all.css',
                        'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap',
                        'https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap.min.css',
                        'https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.19.1/css/mdb.min.css',
                        'https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css',
                        'https://fonts.googleapis.com/css?family=Lato',
                        '/fraola/css/froala_blocks.css'
                    ],
                scripts: [
                    'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js',
                    'https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.4/umd/popper.min.js',
                    'https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/js/bootstrap.min.js',
                    'https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.19.1/js/mdb.min.js',


                ]
            },
        });



        const um = editor.UndoManager;

        ///////////Actions////
        //kt_app_toolbar_slider_value
        document.getElementById("btnDeviceDesktop").addEventListener('click', event => { editor.setDevice("desktop") });
        document.getElementById("btnDeviceTablet").addEventListener('click', event => { editor.setDevice("tablet") });
        document.getElementById("btnDeviceMobile").addEventListener('click', event => { editor.setDevice("mobile") });
        document.getElementById("preview").addEventListener('click', setPreview);
        document.getElementById("fullScreen").addEventListener('click', setfullScreen);
        document.getElementById("undo").addEventListener('click', setundo);
        document.getElementById("redo").addEventListener('click', setredo);
        document.getElementById("Clear").addEventListener('click', setClear);
        document.getElementById("kt_app_toolbar_slider").addEventListener('click', setZoom);
        document.getElementById("Visibility").addEventListener('click', setVisibility);

        editor.Commands.add("set-device-desktop", {
            run: (editor) => editor.setDevice("desktop"),
        });

        editor.Commands.add("set-device-mobile", {
            run: (editor) => editor.setDevice("mobile"),
        })

        editor.Commands.add("set-device-tablet", {
            run: (editor) => editor.setDevice("tablet"),
        })
        function setPreview() {
            editor.runCommand('preview')
        }


        function setfullScreen() {
            editor.runCommand('fullscreen')
        }

        function setundo() {
            console.log("undo")
            um.undo();
        }
        function setredo() {
            console.log("redo")
            um.redo();
        }
        function setVisibility() {
            editor.runCommand('export-template')
        }
        function setClear() {
            console.log("clear")
            editor.DomComponents.clear();
        }
        function setZoom() {
            var zoomValu = document.getElementById("kt_app_toolbar_slider_value").innerHTML;
            var zoomLevel = parseInt(zoomValu);
            var ZoomPrec = zoomLevel * 10;
            console.log("Zoom =" + ZoomPrec)
            editor.Canvas.setZoom(ZoomPrec);
        }

        ///////Start Pages Configs//////
        let config = editor.Canvas.getConfig();


        let stylesLinkStrings;
        let arrayofStyles = []

        stylesLinkStrings = "@Html.Raw(Model.stylesfiles)";

        //console.log(stylesLinkStrings);
        arrayofStyles = stylesLinkStrings.split("$@@");

        arrayofStyles.forEach((e) => {
            config.styles.push(e)
        });

        let jsLinkStrings;
        let arrayofJs = []


        jsLinkStrings = "@Html.Raw(Model.jsfiles)";

        //console.log(jsLinkStrings);

        arrayofJs = jsLinkStrings.split("$@@");
        arrayofJs.forEach((e) => {
            config.scripts.push(e)
        });

        let x = editor.getProjectData();

        jQuery(document).ready(async function () {

            const storageManager = editor.StorageManager;
            const data = await storageManager.load();
            let y = editor.loadProjectData(data);

            ProjectData();

        })


        //load page Function
        function ProjectData() {
            let projectData = editor.getProjectData();
            //console.log(typeof(x));
            //console.log(projectData);
            let projectDataPages = projectData.pages;

            //console.log(projectDataPages);

            let pageId = projectDataPages[0].id
            //console.log(pageId);

            let pageName = 'FirstPage1';

            let PagesList = document.getElementById("Pages");
            let PageSelected = editor.Pages.getSelected();
            for (let i = 0; i < projectDataPages.length; i++) {

                var option = document.createElement("option");
                option.text = projectDataPages[i].id;
                option.value = projectDataPages[i].id;
                if (PageSelected == projectDataPages[i].id) {
                    option.selected = true;
                }
                option.setAttribute("id", projectDataPages[i].id);
                //option.attr("onclick", "getPage(this.id)");
                var select = document.getElementById("PagesDrowpDown");
                select.appendChild(option);
                PagesList.innerHTML += ` <div class="d-flex flex-stack py-4">
                                                                                    <!--begin::Details-->
                                                                                    <div class="d-flex align-items-center">
                                                                                        <!--begin::Details-->
                                                                                        <div class="ms-5">
                                                                                                            <a  class="fs-5 fw-bold text-gray-900 text-hover-primary mb-2" onclick="getPage(this.id)" id="${projectDataPages[i].id}">${projectDataPages[i].id}</a>
                                                                                        </div>
                                                                                        <!--end::Details-->
                                                                                    </div>
                                                                                    <!--end::Details-->
                                                                                    <!--begin::Lat seen-->
                                                                                    <div class="d-flex justify-content-end flex-shrink-0">

                                                                                                <a  class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1" onclick="EditPage(this.id)" id="${projectDataPages[i].id}">
                                                                                            <i class="ki-duotone ki-pencil fs-2"><span class="path1"></span><span class="path2"></span></i>
                                                                                        </a>

                                                                                       <a  class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm" onclick="DeletePage(this.id)" id="${projectDataPages[i].id}">
                                                                                            <i class="ki-duotone ki-trash fs-2"><span class="path1"></span><span class="path2"></span><span class="path3"></span><span class="path4"></span><span class="path5"></span></i>
                                                                                        </a>
                                                                                    </div>
                                                                                    <!--end::Lat seen-->
                                                                                </div>`
            }


            editor.Pages.select(pageId);

        }

        function getPage(pagename) {

            let pageManager = editor.Pages;
            //console.log(pageManager)
            pageManager.select(pagename);
            var select = document.getElementById("PagesDrowpDown").value = pagename;
            document.getElementById("select2-PagesDrowpDown-container").innerHTML = pagename;



        }


        function AddPage() {
            console.log("add Popup");
            $('#showAddModal').modal('show');

        }
        let projectData;

        //Add Page
        async function AddPostPage() {

            let PageName = document.getElementById("pageNameId");
            projectData = editor.getProjectData();
            let projectDataPages = projectData.pages;

            if (PageName.value == "") {
                alert("Page name must be filled out");
            }
            else {
                let projectDataPagesToUpper = projectDataPages.map(function (v) {
                    console.log(v.id)
                    return v.id.toUpperCase();
                });
                if (projectDataPagesToUpper.includes(PageName.value.toUpperCase())) {
                    alert("This Page name Is Existed Aleady!");
                }


                else {
                    let html = editor.getHtml();
                    let css = editor.getCss();
                    const newPage = editor.Pages.add({
                        id: PageName.value,
                        styles: css, // or a JSON of styles
                        component: html
                    });

                    //projectData.pages.push(newPage);

                    projectData = editor.getProjectData();
                    const storedProjectData = await editor.store();

                }
            }


        }


        const InputPageTitleId = document.querySelector("#EditPageId");
        const InputPageTitleName = document.querySelector("#PageTLENId");

        function EditPage(PageId) {


            let pageManager = editor.Pages;
            //console.log(pageManager)
            pageManager.select(PageId);
            let PageSelected = editor.Pages.getSelected();
            console.log()
            if (PageSelected.id.toUpperCase() == "INDEX") {
                alert("Can Not Update The Name Of This Page Because it is The Main Page That Start Your Site");
            }
            else {
                $('#showEditModal').modal('show');
                InputPageTitleName.value = PageId;
            }


        }

        async function SavePage() {
            let PageSelected = editor.Pages.getSelected();
            let htmldata = editor.getHtml();
            let cssdata = editor.getCss();
            PageSelected.component = htmldata;
            PageSelected.styles = cssdata;
            const storedProjectData = await editor.store();

        }

        async function EditPostPage() {

            let PageName = InputPageTitleName.value
            projectData = editor.getProjectData();
            let projectDataPages = projectData.pages;
            if (PageName == "") {
                alert("Page name must be filled out");
            }
            else {
                let projectDataPagesToUpper = projectDataPages.map(function (v) {
                    console.log(v.id)
                    return v.id.toUpperCase();
                });
                if (projectDataPagesToUpper.includes(PageName.toUpperCase())) {
                    alert("This Page name Is Existed Aleady!");
                }


                else {
                    PageSelected.id = PageName;
                    let htmldata = editor.getHtml();
                    let cssdata = editor.getCss();
                    PageSelected.component = htmldata;
                    PageSelected.styles = cssdata;
                    PageSelected.setName(PageName);
                    PageSelected.attributes.id = PageName;

                    //console.log(PageSelected);

                    const storedProjectData = await editor.store();
                }
            }

        }

        function DeletePage(PageId) {
            let pageManager = editor.Pages;
            pageManager.select(PageId);
            $('#deleteRecordModal').modal('show');

        }

        async function DeletePostPage() {

            let PageSelected = editor.Pages.getSelected();
            let PageName = PageSelected.id;
            if (PageName.toUpperCase() == "INDEX") {
                alert("Can Not Delete This Page Because it is The Main Page That Start Your Site");
            }
            else {
                let PageName = PageSelected.id;
                const removedPage = editor.Pages.remove(PageName);
                const storedProjectData = await editor.store();
            }


        }



        // Define the custom form submission block component
        const customFormSubmissionBlock = {
            id: 'custom-form-submission',
            label: 'Custom Form Submission',
            content: `
                                                            <form id="custom-form">
                                                              <input type="text" id="name" name="name" required>
                                                              <button type="submit">Submit</button>
                                                            </form>
                                                          `,
            category: 'Forms',
        };

        // Register the custom component with the block manager
        editor.BlockManager.add(customFormSubmissionBlock);

        // Listen for the 'component' event to handle button clicks
        editor.on('component:add', component => {
            if (component.get('tagName') === 'BUTTON') {
                component.getEl().onclick = handleButtonClick;
            }
        });

        // Function to handle button click
        function handleButtonClick(event) {
            event.preventDefault(); // Prevent the default form submission

            const name = document.getElementById('name').value;

            // Perform form validation if needed

            // Custom logic for handling the button click event
            console.log('Submitted Name:', name);
        }

        function RedirectToSitePublish() {
            var SiteName = document.getElementById("SiteNId").value;
            //var DomainName = document.getElementById("SiteDId").value;
            var Url = document.getElementById("UrlId").value;
            //if (DomainName != undefined) {
            //    window.location.href = Url + "/" + DomainName;

            //} else {
            window.location.href = Url + "/" + SiteName;

            //}


        }

    </script>
    <script src="~/js/blocks.js"></script>
</div>